// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Axios = require("axios");
var React = require("react");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var IsMountedHook$ReactHooksTemplate = require("./IsMountedHook.bs.js");

function handleClick(_event) {
  console.log("clicked!");
  return /* () */0;
}

var UnhandledPromise = Caml_exceptions.create("Component1-ReactHooksTemplate.UnhandledPromise");

function result(param) {
  return Axios.get("http://hn.algolia.com/api/v1/search?query=redux").then((function (response) {
                  return Promise.resolve(response.data);
                })).catch((function (error) {
                return Promise.resolve((console.log(error), /* () */0));
              }));
}

function Component1(Props) {
  var isMounted = IsMountedHook$ReactHooksTemplate.useIsMounted(/* () */0);
  var match = React.useState((function () {
          return ;
        }));
  var setData = match[1];
  var data = match[0];
  var handleClick = function (_event) {
    console.log(data);
    return /* () */0;
  };
  React.useEffect((function () {
          console.log("current", isMounted);
          result(/* () */0).then((function (result) {
                    return Promise.resolve(isMounted ? Curry._1(setData, (function (param) {
                                        return result;
                                      })) : 0);
                  })).catch((function (e) {
                  console.log(e);
                  throw UnhandledPromise;
                }));
          return ;
        }), /* array */[isMounted]);
  var isData = Belt_Option.isSome(data);
  if (isData) {
    return React.createElement("button", {
                onClick: handleClick
              }, "log data");
  } else {
    return "no data";
  }
}

var make = Component1;

exports.handleClick = handleClick;
exports.UnhandledPromise = UnhandledPromise;
exports.result = result;
exports.make = make;
/* axios Not a pure module */
